{"version":3,"sources":["components/ResultList.js","utils/API.js","components/Nav.js","components/Buttons.js","components/Table.js","components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["ResultList","query","axios","get","NavBar","className","id","Buttons","class","type","TableLayout","scope","Container","state","search","results","employees","searchGiphy","API","then","res","setState","data","catch","err","console","log","employeeGrab","handleInputChange","event","name","target","value","handleFormSubmit","preventDefault","this","Nav","Table","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAkBeA,I,gBCXA,EACL,SAAUC,GAChB,OAAOC,IAAMC,IAPD,0CAOeF,EANhB,oCAIA,EAIG,WACd,OAAOC,IAAMC,IAAI,0CCCNC,MAXf,WACE,OACE,qBAAKC,UAAU,mBAAf,SACE,qBAAKC,GAAG,kBAAkBD,UAAU,cAApC,SACE,yDC2BOE,MA/Bf,WACE,OACE,8BACE,qBAAKC,MAAM,4BAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,YAAV,gDACA,oBAAGA,MAAM,OAAT,gEAEE,2CAFF,KAE0B,2CAF1B,IAEkD,IAChD,2CAHF,SAG8B,iDAE9B,wBAAQC,KAAK,SAASD,MAAM,gCAA5B,kBAGA,wBAAQC,KAAK,SAASD,MAAM,gCAA5B,mBAGA,wBAAQC,KAAK,SAASD,MAAM,gCAA5B,mBAGA,wBAAQC,KAAK,SAASD,MAAM,gCAA5B,8BCmBKE,MAvCf,WACE,OACE,wBAAOF,MAAM,QAAb,UACE,gCACE,+BACE,oBAAIG,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,2BAGJ,kCACE,+BACE,oBAAIA,MAAM,MAAV,eACA,4CACA,iDACA,gDACA,8CAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,6CACA,wDACA,gDACA,8CAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,+CACA,mDACA,gDACA,wDCwCKC,E,4MAjEbC,MAAQ,CACNC,OAAQ,GACRC,QAAS,GACTC,UAAW,I,EASbC,YAAc,SAAChB,GACbiB,EAAWjB,GACRkB,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAEN,QAASK,EAAIE,KAAKA,UAChDC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAGhCG,aAAe,WACbT,IACGC,MAAK,SAACC,GAAD,OAASK,QAAQC,IAAIN,MAC1BD,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAEL,UAAWI,EAAIE,KAAKP,aAClDQ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAIhCI,kBAAoB,SAACC,GACnB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3B,EAAKX,SAAL,eACGS,EAAOE,K,EAKZC,iBAAmB,SAACJ,GAClBA,EAAMK,iBACN,EAAKjB,YAAY,EAAKJ,MAAMC,S,uDA9B9B,WACEqB,KAAKlB,YAAY,WACjBkB,KAAKR,iB,oBA+BP,WACE,OACE,gCASE,cAACS,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,W,GAtDgBC,aCDTC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b7701f9b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ResultList(props) {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {props.results.map((result) => (\r\n        <li className=\"list-group-item\" key={result.id}>\r\n          <img\r\n            alt={result.title}\r\n            className=\"img-fluid\"\r\n            src={result.images.original.url}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ResultList;\r\n","import axios from \"axios\";\r\n// we may not need variables to get data from the API\r\nconst BASEURL = \"https://api.giphy.com/v1/gifs/search?q=\";\r\nconst APIKEY = \"&api_key=dc6zaTOxFJmzC&limit=20\";\r\n\r\n// Export an object with a \"search\" method that searches the Giphy API for\r\n// the passed query\r\nexport default {\r\n  search: function (query) {\r\n    return axios.get(BASEURL + query + APIKEY);\r\n  },\r\n  fetchEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=10\");\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div id=\"employee-header\" className=\"card-header\">\r\n        <h2>Employee Directory</h2>\r\n      </div>\r\n      {/* <div className=\"card-body\"></div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nfunction Buttons() {\r\n  return (\r\n    <div>\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <h1 class=\"display-4\">Welcome to your Employee Dashboard</h1>\r\n          <p class=\"lead\">\r\n            Please use the buttons below to filter employees by\r\n            <strong> Name</strong>, <strong>Email</strong>,{\" \"}\r\n            <strong>Phone</strong>, and <strong>Birthday</strong>\r\n          </p>\r\n          <button type=\"button\" class=\"btn btn-secondary btn-lg ml-2\">\r\n            Name\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary btn-lg ml-2\">\r\n            Email\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary btn-lg ml-2\">\r\n            Phone\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary btn-lg ml-2\">\r\n            Birthday\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <button type=\"button\" class=\"btn btn-secondary btn-lg\">Name</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n\r\n// <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>\r\n","import React, { Component } from \"react\";\r\n\r\nfunction TableLayout() {\r\n  return (\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Phone</th>\r\n          <th scope=\"col\">Birthday</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Marky Mark</td>\r\n          <td>Marky@gmail.com</td>\r\n          <td>1(619)123-1234</td>\r\n          <td>02/1/1980</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Willy Wonka</td>\r\n          <td>Wonks@wonkafactory.com</td>\r\n          <td>1(619)123-1234</td>\r\n          <td>5/12/1942</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Frodo Baggins</td>\r\n          <td>potaters@lotr.com</td>\r\n          <td>1(619)123-1234</td>\r\n          <td>9/22/4094 BC</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableLayout;\r\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ResultList from \"./ResultList\";\r\nimport API from \"../utils/API\";\r\nimport NavBar from \"./Nav\";\r\nimport Buttons from \"./Buttons\";\r\nimport TableLayout from \"./Table\";\r\n\r\nclass Container extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: [],\r\n    employees: [],\r\n  };\r\n\r\n  // When this component mounts, search the Giphy API for pictures of kittens\r\n  componentDidMount() {\r\n    this.searchGiphy(\"kittens\");\r\n    this.employeeGrab();\r\n  }\r\n\r\n  searchGiphy = (query) => {\r\n    API.search(query)\r\n      .then((res) => this.setState({ results: res.data.data }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  employeeGrab = () => {\r\n    API.fetchEmployees()\r\n      .then((res) => console.log(res))\r\n      .then((res) => this.setState({ employees: res.data.results }))\r\n      .catch((err) => console.log(err));\r\n    //\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // When the form is submitted, search the Giphy API for `this.state.search`\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.searchGiphy(this.state.search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* \r\n        I want to render the following:\r\n        - hero/header - Create a component file and link above \r\n        - a table that can be sorted by either a button or a column heading selection - Create a component file and link above\r\n        - a table with 10 employees from the API - Create a component file and link above\r\n          - employees have at least 3-4 datapoints\r\n        \r\n        */}\r\n        <NavBar />\r\n        <Buttons />\r\n        <TableLayout />\r\n        {/* <SearchForm\r\n          search={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n        /> */}\r\n        {/* <ResultList results={this.state.results} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return <Container />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}